{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSucess, googleSignInFailure, emailSignInSucess, emailSignInFailure } from './user.actions';\nimport UserActionTypes from './user.types';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSucess({\n      id: userSnapshot,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    yield;\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/Tuti/Desktop/YO/Proyectos Actuales/cloth-ecommerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","googleSignInSucess","googleSignInFailure","emailSignInSucess","emailSignInFailure","UserActionTypes","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,iBAAlD,EAAqEC,kBAArE,QAA+F,gBAA/F;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACU,eAAL,CAAqBT,cAArB,CAAvB;AACA,UAAMU,OAAO,GAAG,MAAMZ,IAAI,CAACG,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACM,kBAAkB,CAAC;AAACW,MAAAA,EAAE,EAAEF,YAAL;AAAmB,SAAGA,YAAY,CAACG,IAAb;AAAtB,KAAD,CAAnB,CAAT;AACH,GALD,CAKE,OAAMC,KAAN,EAAa;AACX,UAAMnB,GAAG,CAACO,mBAAmB,CAACY,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAyD;AAC5D,MAAI;AACA;AACH,GAFD,CAEE,OAAMJ,KAAN,EAAa;AACX,UAAMnB,GAAG,CAACS,kBAAkB,CAACU,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUK,mBAAV,GAAgC;AACnC,QAAMzB,UAAU,CAACW,eAAe,CAACe,oBAAjB,EAAuCd,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUe,kBAAV,GAA+B;AAClC,QAAM3B,UAAU,CAACW,eAAe,CAACiB,mBAAjB,CAAhB;AACH;AAED,OAAO,UAAUC,SAAV,GAAsB;AACzB,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACsB,mBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\r\nimport { googleSignInSucess, googleSignInFailure, emailSignInSucess, emailSignInFailure } from './user.actions';\r\nimport UserActionTypes from './user.types';\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(googleSignInSucess({id: userSnapshot, ...userSnapshot.data()}));\r\n    } catch(error) {\r\n        yield put(googleSignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload: {email, password }}) {\r\n    try {\r\n        yield\r\n    } catch(error) {\r\n        yield put(emailSignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, )\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onGoogleSignInStart)]);\r\n}"]},"metadata":{},"sourceType":"module"}